{ Pascal prototypes for Library Routines currently available in Vectorworks. }
{
AlignDistribute2D(MenuAction: LONGINT; VAR AlignDist2DParms: LONGINT);
AlignDistribute3D(MenuAction: LONGINT; VAR AlignDist3DParms: LONGINT);
RunColorPaletteMgr() : BOOLEAN;
RunNewColorPalette() : STRING;
RunPickClrFromPal(VAR filename: STRING; VAR index: LONGINT) : BOOLEAN;
CW_Generic_1_0(err: LONGINT);
CW_GetLibString(VAR s: STRING; resource: INTEGER; nr_in_resource: INTEGER; VAR ok: BOOLEAN);
CW_ReadlineDialog14(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_MessageDialog(number_of_strings: LONGINT; titel: STRING; text1: STRING; text2: STRING; text3: STRING; text4: STRING);
CW_GradientDialog14(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_ImageDialog14(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_AlarmDialog(daten_version: LONGINT; daten: FUNCTION; VAR OK: BOOLEAN);
CW_LineThicknessDialog(VAR mils: LONGINT; VAR OK: BOOLEAN);
CW_FontsizeDialog(VAR points: LONGINT; VAR OK: BOOLEAN; version: LONGINT; plug_in_code: LONGINT; contextual_help_id: STRING);
CW_TextDistanceDialog(daten_version: LONGINT; daten: FUNCTION; VAR OK: BOOLEAN; plug_in_code: LONGINT; contextual_help_id: STRING);
CW_Sym12Dialog(daten_version: LONGINT; modus: LONGINT; daten: FUNCTION; VAR OK: BOOLEAN);
CW_IsLatestVersionOfPIO(object: HANDLE; code: LONGINT; VAR ok: BOOLEAN);
CW_FontStyleDialog(VAR style: LONGINT; VAR ok: BOOLEAN; version: LONGINT; plug_in_code: LONGINT; contextual_help_id: STRING);
CW_GetVariableLong(index: LONGINT; VAR value: LONGINT; VAR ok: BOOLEAN);
CW_SetVariableLong(index: LONGINT; value: LONGINT; VAR ok: BOOLEAN);
CW_GetDistributor12(VAR distri: LONGINT);
CW_GetVariableStr255(index: LONGINT; VAR value: STRING; VAR ok: BOOLEAN);
CW_SetVariableStr255(index: LONGINT; value: STRING; VAR ok: BOOLEAN);
CW_GetPIOInstance(pfad: LONGINT; ordnername: STRING; VAR objekt: HANDLE; VAR ok: BOOLEAN);
CW_GetRecordField(title: STRING; flags: LONGINT; VAR db_name: STRING; VAR field_name: STRING; VAR result: BOOLEAN);
CW_Attributdialog(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_YesNoAlwaysdialog(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_Tippdialog(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_ScaleThresholdDialog(VAR ok: BOOLEAN);
CW_EditNewerPIODialog(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_TileDialog(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
CW_HatchDialog(version: LONGINT; data: FUNCTION; VAR ok: BOOLEAN);
ImportDXFDWG();
ImportSingleDXFDWG();
ImportDXFDWGFile(fileName: STRING) : INTEGER;
ExportDXFDWG();
SetDXFColorToLW(dxfClrIndex: INTEGER; lineWeight: INTEGER);
GetDXFColorToLW(dxfClrIndex: INTEGER) : INTEGER;
DXFScaleString(scale: REAL) : STRING;
SetLastDXFImportOpt(selector: INTEGER; value: FUNCTION) : BOOLEAN;
GetLastDXFImportOpt(selector: INTEGER; value: FUNCTION) : BOOLEAN;
GS_EdSh_ConstructLayout(shaderNameCStr: LONGINT; paramsPtr: LONGINT; VAR libraryDataPtr: LONGINT);
GS_EdSh_PopulateMenu(itemID: LONGINT; numStrings: LONGINT; cStringsArray: LONGINT; libraryDataPtr: LONGINT);
GS_EdSh_RunDialog(VAR userHitOK: BOOLEAN; libraryDataPtr: LONGINT);
ConvertToPolyline(h: HANDLE) : HANDLE;
ConvertToPolygon(h: HANDLE; resolution: INTEGER) : HANDLE;
OffsetPoly(h: HANDLE; offsetDistance: REAL; numberOfOffsets: INTEGER; consolidateVertices: BOOLEAN; sharpCorners: BOOLEAN; conversionRes: INTEGER; consolidationTolerance: REAL) : HANDLE;
ClosestPoints(h1: HANDLE; h2: HANDLE; VAR pt1X, pt1Y, pt1Z: REAL; VAR pt2X, pt2Y, pt2Z: REAL; VAR touching: BOOLEAN);
LineCircleIntersect(begPtX, begPtY, begPtZ: REAL; endPtX, endPtY, endPtZ: REAL; cenPtX, cenPtY, cenPtZ: REAL; radius: REAL; VAR pt1X, pt1Y, pt1Z: REAL; VAR pt2X, pt2Y, pt2Z: REAL) : BOOLEAN;
CircleCircleInters(cenPt1X, cenPt1Y, cenPt1Z: REAL; cenPt2X, cenPt2Y, cenPt2Z: REAL; radius1: REAL; radius2: REAL; VAR pt1X, pt1Y, pt1Z: REAL; VAR pt2X, pt2Y, pt2Z: REAL) : BOOLEAN;
OverlapLineLine(begPt1X, begPt1Y, begPt1Z: REAL; endPt1X, endPt1Y, endPt1Z: REAL; begPt2X, begPt2Y, begPt2Z: REAL; endPt2X, endPt2Y, endPt2Z: REAL; VAR lapPt1X, lapPt1Y, lapPt1Z: REAL; VAR lapPt2X, lapPt2Y, lapPt2Z: REAL; tolerance: REAL) : BOOLEAN;
OverlapArcArcNot() : BOOLEAN;
OverlapLineArc(begPtX, begPtY, begPtZ: REAL; endptX, endptY, endptZ: REAL; cenPtX, cenPtY, cenPtZ: REAL; radius: REAL; startAng: REAL; sweepAng: REAL; VAR lapPt1X, lapPt1Y, lapPt1Z: REAL; VAR lapPt2X, lapPt2Y, lapPt2Z: REAL; tolerance: REAL) : BOOLEAN;
PtPerpLine(ptX, ptY, ptZ: REAL; begPtX, begPtY, begPtZ: REAL; endPtX, endPtY, endPtZ: REAL) X, Y, Z: REAL;
PtPerpCircle(ptX, ptY, ptZ: REAL; cenPtX, cenPtY, cenPtZ: REAL; radius: REAL) X, Y, Z: REAL;
PtOnLine(ptX, ptY, ptZ: REAL; begPtX, begPtY, begPtZ: REAL; endPtX, endPtY, endPtZ: REAL; tolerance: REAL) : BOOLEAN;
PtOnArc(ptX, ptY, ptZ: REAL; cenPtX, cenPtY, cenPtZ: REAL; radius: REAL; startAng: REAL; sweepAng: REAL; tolerance: REAL) : BOOLEAN;
ThreePtCenter(pt1X, pt1Y, pt1Z: REAL; pt2X, pt2Y, pt2Z: REAL; pt3X, pt3Y, pt3Z: REAL) X, Y, Z: REAL;
Min(val1: REAL; val2: REAL) : REAL;
Max(val1: REAL; val2: REAL) : REAL;
RegularPolygon(centerX: REAL; centerY: REAL; radius: REAL; numSides: INTEGER; mode: INTEGER);
PointAlongPoly(h: HANDLE; dist: REAL; VAR ptX, ptY, ptZ: REAL; VAR tangentX, tangentY, tangentZ: REAL) : BOOLEAN;
GetPtInPoly(h: HANDLE) X, Y, Z: REAL;
RelativeCoords(ptX, ptY, ptZ: REAL; begPtX, begPtY, begPtZ: REAL; endPtX, endPtY, endPtZ: REAL) X, Y, Z: REAL;
Eq(value1: REAL; value2: REAL; tolerance: REAL) : BOOLEAN;
EqPercent(value1: REAL; value2: REAL; percent: REAL) : BOOLEAN;
EqPt(pt1X, pt1Y, pt1Z: REAL; pt2X, pt2Y, pt2Z: REAL; tolerance: REAL) : BOOLEAN;
Distance3D(x1: REAL; y1: REAL; z1: REAL; x2: REAL; y2: REAL; z2: REAL) : REAL;
Centroid(h: HANDLE; VAR x: REAL; VAR y: REAL) : BOOLEAN;
Cloud(h: HANDLE; rMin: REAL; rMax: REAL; hFactor: REAL; convex: BOOLEAN; removeIntersections: BOOLEAN) : HANDLE;
Stipple(hProfileObject: HANDLE; shapeType: INTEGER; density: INTEGER; clipToProfile: INTEGER; minSize: REAL; maxSize: REAL; minAspectRatio: REAL; maxAspectRatio: REAL; randomRotate: BOOLEAN) : HANDLE;
ClipPolygon(hPolygon: HANDLE; hClipper: HANDLE; dFuzz: REAL) : HANDLE;
CombinePolygons(hPolygonA: HANDLE; hPolygonB: HANDLE; dFuzz: REAL) : HANDLE;
SubtractPolygon(hMinuedPoly: HANDLE; hSubtrahend: HANDLE; dFuzz: REAL) : HANDLE;
EqPt2D(pt1X, pt1Y, pt1Z: REAL; pt2X, pt2Y, pt2Z: REAL; tolerance: REAL) : BOOLEAN;
EqPt3D(pt1X, pt1Y, pt1Z: REAL; pt2X, pt2Y, pt2Z: REAL; tolerance: REAL) : BOOLEAN;
ConvertToArcPolyline(hPolygon: HANDLE; dFuzz: REAL) : HANDLE;
PolyMedialAxis(h: HANDLE) : HANDLE;
OffsetHandle(h: HANDLE; offsetDistance: REAL; EdgeRestoration: BOOLEAN; FilletSharpEdges: BOOLEAN) : HANDLE;
IsWallPeakTop(hWall: HANDLE; peakIndex: INTEGER) : BOOLEAN;
GetWallHeight(hWall: HANDLE; VAR dStartTopHght: REAL; VAR dStartBotHght: REAL; VAR dEndTopHght: REAL; VAR dEndBotHght: REAL);
CreateUUID() : STRING;
CutProfileHoles(hWall: HANDLE);
GetZatXY(hObject: HANDLE; X: REAL; Y: REAL; VAR outZ: REAL) : BOOLEAN;
SetToolByName(toolName: STRING) : BOOLEAN;
CallToolByName(toolName: STRING) : BOOLEAN;
FindObjAtPt_Create(hContainer: HANDLE; objOptions: INTEGER; travOptions: INTEGER; locX: REAL; locY: REAL; pickRadius: REAL) : LONGINT;
FindObjAtPt_GetCount(finderID: LONGINT) : INTEGER;
FindObjAtPt_GetObj(finderID: LONGINT; objIndex: INTEGER) : HANDLE;
FindObjAtPt_Delete(finderID: LONGINT);
OffsetPolyN(h: HANDLE; offsetDistance: REAL; smoothCorners: BOOLEAN) : HANDLE;
DefineCustomObj(pluginName: STRING; prefWhen: INTEGER) : HANDLE;
MakeCornerWindow(hWindow: HANDLE; hWall: HANDLE; cornerWindow: BOOLEAN; NoneClass: STRING; Sill2DClass: STRING; IsFlipped: BOOLEAN);
CallToolByIndex(toolIndex: INTEGER) : BOOLEAN;
SetToolByIndex(toolIndex: INTEGER) : BOOLEAN;
IFC_QueryInterface(pCBP: FUNCTION; uuid: FUNCTION) : FUNCTION;
IFC_ReleaseInterfaces(pCBP: FUNCTION; interface: FUNCTION);
IFC_ImportWithUI();
IFC_ExportWithUI(bExpSingleObj: BOOLEAN);
IFC_ImportNoUI(strFilePath: STRING);
IFC_SetIFCEntity(hObject: HANDLE; inStrIfcName: STRING) : BOOLEAN;
IFC_GetIFCEntity(hObject: HANDLE; VAR outStrName: STRING) : BOOLEAN;
IFC_SetEntityProp(hObject: HANDLE; inStrPropName: STRING; inStrPropValue: STRING) : BOOLEAN;
IFC_GetEntityProp(hObject: HANDLE; inStrPropName: STRING; VAR outStrPropValue: STRING; VAR outTypeSelect: INTEGER) : BOOLEAN;
IFC_GetNumPsets(hObject: HANDLE; VAR outNumPsets: INTEGER) : BOOLEAN;
IFC_GetPsetName(hObject: HANDLE; inPsetIndex: INTEGER; VAR outStrPsetName: STRING) : BOOLEAN;
IFC_AttachPset(hObject: HANDLE; inStrPsetName: STRING) : BOOLEAN;
IFC_SetPsetProp(hObject: HANDLE; inStrPsetName: STRING; inStrPropName: STRING; inStrPropValue: STRING) : BOOLEAN;
IFC_GetPsetProp(hObject: HANDLE; inStrPsetName: STRING; inStrPropName: STRING; VAR outStrPropValue: STRING; VAR outTypeSelect: INTEGER) : BOOLEAN;
IFC_ClearIFCInfo(hObject: HANDLE) : BOOLEAN;
IFC_SetEntityColor(inStrIfcType: STRING; inRed: INTEGER; inGreen: INTEGER; inBlue: INTEGER; inTransp: INTEGER) : BOOLEAN;
IFC_GetEntityColor(inStrIfcType: STRING; VAR outRed: INTEGER; VAR outGreen: INTEGER; VAR outBlue: INTEGER; VAR outTransp: INTEGER) : BOOLEAN;
IFC_CopyIFCData(hSource: HANDLE; hDestination: HANDLE; inMode: INTEGER) : BOOLEAN;
PDF_VerifyLibrary() : BOOLEAN;
PDF_GetPageCount(inFilePath: FUNCTION) : LONGINT;
PDF_CreateBlob(inFilePath: FUNCTION; ioBlobPtr: FUNCTION; ioBlobSize: FUNCTION; ioCurPage: FUNCTION) : BOOLEAN;
PDF_DestroyBlob(ioBlobPtr: FUNCTION) : BOOLEAN;
PDF_GetPageSizeFromBlob(inBlobPtr: FUNCTION; inBlobSize: LONGINT; inPageBoxID: LONGINT; inCurPage: FUNCTION; outBoxLeft: FUNCTION; outBoxTop: FUNCTION; outBoxRight: FUNCTION; outBoxBottom: FUNCTION) : BOOLEAN;
PDF_DrawDCFromBlob(inBlobPtr: FUNCTION; inBlobSize: LONGINT; inCurPage: LONGINT; inDC: FUNCTION; inDrawMatrix: FUNCTION; inInvalRect: FUNCTION; inCancelCB: FUNCTION) : BOOLEAN;
PDF_FlushCache() : BOOLEAN;
PDF_GetPageMatrixFromBlob(inBlobPtr: FUNCTION; inBlobSize: LONGINT; inCurPage: LONGINT; inMatrix: FUNCTION) : BOOLEAN;
PDF_PrintBlob(inBlobPtr: FUNCTION; inBlobSize: LONGINT; inSettings: FUNCTION) : BOOLEAN;
PDF_DrawObjectsFromBlob(inBlobPtr: FUNCTION; inBlobSize: LONGINT; inCurPage: LONGINT; inMatrix: FUNCTION; boundsX, boundsY: REAL) : BOOLEAN;
PDF_SetPageImage(inBlobPtr: HANDLE) : BOOLEAN;
PDF_SetProgressBar(progressPtr: FUNCTION; status: BOOLEAN) : BOOLEAN;
PACEAPITest(apiCall: LONGINT; VAR paceErr: INTEGER; timeIn: LONGINT; VAR timeOut: LONGINT; VAR chal: STRING; resp: DYNARRAY [] OF CHAR);
EditRenderWorksPrefs(VAR updateRendering: BOOLEAN);
EditOpenGLPrefs(VAR updateRendering: BOOLEAN);
RetrieveCustomRWPrefs(VAR useTextures: BOOLEAN; VAR useTransparency: BOOLEAN; VAR useShadows: BOOLEAN; VAR useRayTracing: BOOLEAN; VAR useAntiAliasing: BOOLEAN; VAR useDithering: BOOLEAN; VAR tessellationDetail: INTEGER; VAR shadowStyle: INTEGER; VAR rayT
RetrieveOpenGLPrefs(VAR useTextures: BOOLEAN; VAR tessellationDetail: INTEGER; VAR useNURBS: BOOLEAN);
CreateOpenGLHandle(VAR GLHandle: HANDLE);
CreateRWHandle(VAR RenderWorks handle: HANDLE);
CreateHLHandle(VAR Hiddel Line Rendering Options handle: HANDLE);
RetrieveHLPrefs(VAR smoothingAngle: REAL; VAR lineStyle: INTEGER; VAR shadeFactorIndex: INTEGER);
SetOpenGLPrefs(VAR useTextures: BOOLEAN; VAR tessellationDetail: INTEGER; VAR useNURBS: BOOLEAN);
SetCustomRWPrefs(VAR useTextures: BOOLEAN; VAR useTransparency: BOOLEAN; VAR useShadows: BOOLEAN; VAR useRayTracing: BOOLEAN; VAR useAntiAliasing: BOOLEAN; VAR useDithering: BOOLEAN; VAR tessellationDetail: INTEGER; VAR shadowStyle: INTEGER; VAR rayTracin
ImportSketchup(filePath: STRING; doSingleSym: BOOLEAN) : BOOLEAN;
TrueTypeToPoly(textHandle: HANDLE; VAR polyGroupHandle: HANDLE) : LONGINT;
UpdateCheck(?; useProxy: BOOLEAN; proxyType: STRING; proxyAddr: STRING; proxyPort: INTEGER; proxyUser: STRING; proxyPass: STRING) : STRING;
LogUpload(?; dataSize: LONGINT; timeout: LONGINT; mac: STRING; sn: STRING; datatype: STRING) : INTEGER;
MajorUpdateCheck(?; useProxy: BOOLEAN; proxyType: STRING; proxyAddr: STRING; proxyPort: INTEGER; proxyUser: STRING; proxyPass: STRING; versionname: STRING) : INTEGER;
GetCallBackInval() : BOOLEAN;
SetCallBackInval(turnInvalOn: BOOLEAN);
SetModeString(messageStr: STRING);
DeleteWallPeak(wallHandle: HANDLE; index: INTEGER);
IsPolyClosed(polyHandle: HANDLE) : BOOLEAN;
SetPolyClosed(polyHandle: HANDLE; isClosed: BOOLEAN);
SaveActiveDocument(filePath: STRING) : LONGINT;
GetFileN(title: STRING; defaultFolder: STRING; mask: STRING; VAR fileName: STRING) : BOOLEAN;
CreateFolder(path: STRING) : BOOLEAN;
GetFPathName() : STRING;
GetFilesInFolder(folderName: STRING; index: INTEGER) : STRING;
GetFolder(promptStr: STRING; VAR directoryPath: STRING) : INTEGER;
HScale2D(h: HANDLE; centerX: REAL; centerY: REAL; scaleX: REAL; scaleY: REAL; scaleText: BOOLEAN);
HScale3D(h: HANDLE; centerX: REAL; centerY: REAL; centerZ: REAL; scaleX: REAL; scaleY: REAL; scaleZ: REAL);
SetRRDiam(h: HANDLE; xDiam: REAL; yDiam: REAL);
GetMainDisplayBounds(VAR outTop: INTEGER; VAR outLeft: INTEGER; VAR outBottom: INTEGER; VAR outRight: INTEGER);
GetTextWidthInPixels(inTextToMeasure: STRING) : INTEGER;
DrawTextAtInsertionPoint(inTextToDraw: STRING; inInsertionPointX, inInsertionPointY: REAL);
DrawMacCommandKeyTextAtInsertionPoint(inCommandKeyTextToDraw: STRING; inInsertionPointX, inInsertionPointY: REAL);
GetMacCommandKeyTextWidthInPixels(inCommandKeyTextToDraw: STRING) : INTEGER;
FlipHybMatrixObj(ioHybMatObj: HANDLE; inFlipSpecifier: INTEGER);
DTM6_IsObjectReady(hDTMObject: HANDLE) : BOOLEAN;
DTM6_IsDTM6Object(hDTMObject: HANDLE) : BOOLEAN;
DTM6_GetZatXY(hDTMObject: HANDLE; TINType: INTEGER; x: REAL; y: REAL; VAR outZ: REAL) : BOOLEAN;
DTM6_GetDTMObject(hLayer: HANDLE; bPickUpModel: BOOLEAN) : HANDLE;
DTM6_SendToSurface(hDTMObject: HANDLE; hObject: HANDLE; TINType: INTEGER) : BOOLEAN;
DTM6_IsTypeVisible(hDTMObject: HANDLE; TINType: INTEGER) : BOOLEAN;
DTM6_GetDTMOver(hObject: HANDLE) : HANDLE;
DTM6_ClearModelCache(hObject: HANDLE);
Plant_CreateDuplicatePlant(plantToCreateFrom: HANDLE);
Plant_ReplacePlant(plantToReplace: HANDLE);
Plant_UpdatePlacePlantTool(plantToUpdateWith: HANDLE);
Plant_EditPlantDefinitionViaResourceBrowser(plantToEdit: HANDLE);
Plant_ResetPlantInstances(plantSymbolName: FUNCTION);
Plant_UpdateTranslatedPlantIDRecord(newID: FUNCTION);
Plant_GetToolPlantName() : FUNCTION;
Plant_GetToolPlacementMode() : INTEGER;
Plant_GetToolSpacing() : REAL;
Plant_GetToolInitialized() : INTEGER;
InitXML() : LONGINT;
CreateNewXMLDocument(XMLHandle: LONGINT; rootElementName: STRING) : INTEGER;
ReadXMLFile(XMLHandle: LONGINT; whichPath: INTEGER; filename: STRING) : INTEGER;
WriteXMLFile(XMLHandle: LONGINT; whichPath: INTEGER; filename: STRING) : INTEGER;
GetElementValue(XMLHandle: LONGINT; elementPath: STRING; VAR value: STRING) : INTEGER;
SetElementValue(XMLHandle: LONGINT; elementPath: STRING; value: STRING) : INTEGER;
DeleteElement(XMLHandle: LONGINT; elementPath: STRING) : INTEGER;
GetAttributeValue(XMLHandle: LONGINT; elementPath: STRING; attribute: STRING; VAR value: STRING) : INTEGER;
SetAttributeValue(XMLHandle: LONGINT; elementPath: STRING; attribute: STRING; value: STRING) : INTEGER;
DeleteAttribute(XMLHandle: LONGINT; elementPath: STRING; attribute: STRING) : INTEGER;
GetCDATA(XMLHandle: LONGINT; elementPath: STRING; VAR returnVal: DYNARRAY [] OF CHAR) : INTEGER;
SetCDATA(XMLHandle: LONGINT; elementPath: STRING; data: DYNARRAY [] OF CHAR) : INTEGER;
DeleteCDATA(XMLHandle: LONGINT; elementPath: STRING) : INTEGER;
ReleaseXML(XMLHandle: LONGINT) : INTEGER;
ReadXMLMemory(XMLHandle: LONGINT; XMLData: DYNARRAY [] OF CHAR) : INTEGER;
WriteXMLMemory(XMLHandle: LONGINT; VAR XMLData: DYNARRAY [] OF CHAR) : INTEGER;
GetFirstChild(XMLHandle: LONGINT; elementPath: STRING; VAR value: STRING) : INTEGER;
GetNextElement(XMLHandle: LONGINT; elementPath: STRING; VAR value: STRING) : INTEGER;
GetPreviousElement(XMLHandle: LONGINT; elementPath: STRING; VAR value: STRING) : INTEGER;
FindElement(XMLHandle: LONGINT; startElementPath: STRING; searchElement: STRING; VAR foundPath: STRING) : INTEGER;
FindAttribute(XMLHandle: LONGINT; startElementPath: STRING; searchAttribute: STRING; VAR foundPath: STRING; VAR attributeValue: STRING) : INTEGER;
XMLSAXParseFile(XMLHandle: LONGINT; whichPath: INTEGER; filename: STRING; nodeCallback: FUNCTION) : INTEGER;
XMLSAXParseMemory(XMLHandle: LONGINT; XMLData: DYNARRAY [] OF CHAR; nodeCallback: FUNCTION) : INTEGER;
XMLSAXBeginDocFile(XMLHandle: LONGINT; whichPath: INTEGER; filename: STRING) : INTEGER;
XMLSAXEndDoc(XMLHandle: LONGINT) : INTEGER;
XMLSAXBeginDocMemory(XMLHandle: LONGINT) : INTEGER;
XMLSAXEndDocMemory(XMLHandle: LONGINT; VAR XMLData: DYNARRAY [] OF CHAR) : INTEGER;
XMLSAXBeginNode(XMLHandle: LONGINT; nodeName: STRING) : INTEGER;
XMLSAXEndNode(XMLHandle: LONGINT) : INTEGER;
XMLSAXAddNodeValue(XMLHandle: LONGINT; nodeValue: STRING) : INTEGER;
XMLSAXAddNodeAttr(XMLHandle: LONGINT; nodeAttrName: STRING; nodeAttrValue: STRING) : INTEGER;
GetEvent() : LONGINT;
SetObjPropVS(PropertyID: LONGINT; PropertyVal: BOOLEAN) : BOOLEAN;
SetObjPropCharVS(PropertyID: LONGINT; PropertyVal: CHAR) : BOOLEAN;
VSOSetEventResult(inEventResult: LONGINT);
XPropAccessNNA(inSelector: LONGINT; inP1: LONGINT; inP2: LONGINT; VAR outP1: LONGINT) : BOOLEAN;
XPropVSToolNNA(inToolFileIndex: INTEGER; inToolAction: LONGINT; inToolMessage1: LONGINT; VAR inToolMessage2: LONGINT; inToolUserDataID: BOOLEAN; VAR outCallReturn: LONGINT);
vstSetEventInfo(inAction: LONGINT; inMessage1: LONGINT; inMessage1: LONGINT; inRsrcFileID: INTEGER);
vstGetEventInfo(VAR outAction: LONGINT; VAR outMessage1: LONGINT; VAR outMessage2: LONGINT);
vstAddRadioMode(inInitialSetting: INTEGER; inNumButtons: INTEGER; inRsrcID_1: INTEGER; inRsrcID_2: INTEGER; inRsrcID_3: INTEGER; inRsrcID_4: INTEGER; inRsrcID_5: INTEGER; inRsrcID_6: INTEGER);
vstNumPts(VAR outNumPts: LONGINT);
vstGetPt2D(inPtIndex: LONGINT; VAR outX: REAL; VAR outY: REAL; result: BOOLEAN);
vstGetCurrPt2D(VAR outX: REAL; VAR outY: REAL);
vstCustomProcNNA(inEvent: LONGINT; VAR outEvtResult: LONGINT; inMode: LONGINT; inDiameter: REAL; inSpacing: REAL) : BOOLEAN;
vstSetEventResult(inSetVal: LONGINT);
vstGetEventResult(VAR outGetVal: LONGINT);
AddAssociation(ioOwnerObj: HANDLE; inKind: INTEGER; ioTargetObj: HANDLE) : BOOLEAN;
vstGetModeValue(inModeGroup: LONGINT; VAR outValue: LONGINT);
vstSetHelpString(inHelpStr: STRING);
vstSetDataLong(inDataID: LONGINT; inDataVal: LONGINT; VAR result: BOOLEAN);
vstGetDataLong(inDataID: LONGINT; VAR outData: LONGINT; VAR result: BOOLEAN);
RemoveAssociation(ioOwnerObj: HANDLE; inKind: INTEGER; ioTargetObj: HANDLE) : BOOLEAN;
vstSetRsrcFile(inFileName: STRING);
vstGetRsrcFileID(VAR outFileID: INTEGER);
vstNameUndoEvent(inUndoEventName: STRING);
GetXPropVersion(VAR outVersion: LONGINT);
vstGetPt3D(inPtIndex: LONGINT; VAR outX: REAL; VAR outY: REAL; VAR outZ: REAL; result: BOOLEAN);
vstGetCurrPt3D(VAR outX: REAL; VAR outY: REAL; VAR outZ: REAL; result: BOOLEAN);
SetCntrlPtVis(inCustomObj: HANDLE; inContrlPtIndex: INTEGER; inIsVisible: BOOLEAN);
vstGetString(inStrListID: INTEGER; inStrID: INTEGER; VAR outString: STRING);
vsoGetEventInfo(VAR outObjEvent: LONGINT; VAR outEventData: LONGINT);
vsoInsertWidget(paramID: LONGINT; widgetType: LONGINT; mappingID: LONGINT; text: STRING; data: LONGINT) : BOOLEAN;
vsoInsertAllParams() : BOOLEAN;
vsoAppendWidget(widgetType: LONGINT; mappingID: LONGINT; text: STRING; data: LONGINT) : BOOLEAN;
vstAddButtonMode(inIconID: INTEGER);
vstSetDataReal(inDataID: LONGINT; inDataVal: REAL; VAR result: BOOLEAN);
vstGetDataReal(inDataID: LONGINT; VAR outData: REAL; VAR result: BOOLEAN);
vstSetDataString(inDataID: LONGINT; inDataVal: DYNARRAY [] OF CHAR; VAR result: BOOLEAN);
vstGetDataString(inDataID: LONGINT; VAR outData: DYNARRAY [] OF CHAR; VAR result: BOOLEAN);
vstSetPtBehavior(inStatusType: LONGINT);
vstSetCustomProc(inRoutineName: STRING);
vstSetModeHelpBase(inTextRsrcIDBase: INTEGER);
vstGetModeHelpBase(VAR outTextRsrcIDBase: INTEGER);
vstGetToolObject() : HANDLE;
vstGetPickObject() : HANDLE;
vstEnableMode(inModeNumber: INTEGER; inEnable: BOOLEAN);
vsoInsertParamWidget(position: LONGINT; parameterID: LONGINT; text: STRING; data: LONGINT) : BOOLEAN;
vsoAppendParamWidget(parameterID: LONGINT; text: STRING; data: LONGINT) : BOOLEAN;
vstAddPDMenuMode(label: STRING);
vstAddPDMenuItem(group: INTEGER; item: STRING);
vstSetPDMenuSel(group: INTEGER; selectedItem: INTEGER);
SetObjPropDoubleVS(PropertyID: LONGINT; PropertyVal: REAL) : BOOLEAN;
vsoWidgetGetRecParam(widgetID: LONGINT) : STRING;
vsoWidgetGetText(widgetID: LONGINT) : STRING;
vsoWidgetSetText(widgetID: LONGINT; text: STRING);
vsoWidgetGetEnable(widgetID: LONGINT) : BOOLEAN;
vsoWidgetSetEnable(widgetID: LONGINT; enabled: BOOLEAN);
vsoWidgetGetVisible(widgetID: LONGINT) : BOOLEAN;
vsoWidgetSetVisible(widgetID: LONGINT; visible: BOOLEAN);
vsoWidgetPopupClear(widgetID: LONGINT);
vsoWidgetPopupAdd(widgetID: LONGINT; id: STRING; text: STRING);
vsoStateAddCurrent(hObj: HANDLE; message: LONGINT) : LONGINT;
vsoStateClear(hObj: HANDLE);
vsoStateGet(hObj: HANDLE; state: INTEGER) : BOOLEAN;
vsoStateGetPos(hObj: HANDLE; VAR outX: REAL; VAR outY: REAL; VAR outZ: REAL; VAR outIs3D: BOOLEAN) : BOOLEAN;
vsoStateGetRot(hObj: HANDLE; VAR outDiffAng: REAL; VAR outIs3D: BOOLEAN) : BOOLEAN;
vsoStateGetParamChng(hObj: HANDLE; VAR outWidgID: LONGINT; VAR outPrmIdx: INTEGER; VAR outOldVal: STRING) : BOOLEAN;
vsoStateGetObjChng(hObj: HANDLE; VAR outChangeID: LONGINT) : BOOLEAN;
vsoStateGetLayrChng(hObj: HANDLE; VAR outOldScale: REAL; VAR outNewScale: REAL; VAR outScaleText: BOOLEAN) : BOOLEAN;
vsoStateGetExitGroup(hObj: HANDLE; VAR outGrpType: LONGINT) : BOOLEAN;
vsoStateGetNameChng(hObj: HANDLE; VAR outOldName: STRING; VAR outNewName: STRING) : BOOLEAN;
vsoWidgetPopupGetCnt(widgetID: LONGINT) : LONGINT;
vsoWidgetPopupGet(widgetID: LONGINT; index: LONGINT; VAR outId: STRING; VAR outText: STRING);
vsoWidgetPopupSet(widgetID: LONGINT; index: LONGINT; id: STRING; text: STRING);
vsoSetObjToolName(eventData: LONGINT; toolName: STRING);
vstGetInitObject(message1: LONGINT) : HANDLE;
vstSetWPHybridTool(message1: LONGINT);
vstRestoreWPHybridTool(message1: LONGINT);
vstSetCursorByView();
vstDefault2DToolDraw();
vstDefault3DToolDraw();
vstDrawCoordArcN(ptLeftTopX, ptLeftTopY: REAL; ptRghtBotX, ptRghtBotY: REAL; startAngle: REAL; sweepAngle: REAL);
vstDrawCoordEllipse(ptLeftTopX, ptLeftTopY: REAL; ptRghtBotX, ptRghtBotY: REAL);
vstDrawCoordLine(pt1X, pt1Y: REAL; pt2X, pt2Y: REAL);
vstDrawCoordLine3D(pt1X, pt1Y, pt1Z: REAL; pt2X, pt2Y, pt2Z: REAL);
vstDrawCoordRect(ptLeftTopX, ptLeftTopY: REAL; ptRghtBotX, ptRghtBotY: REAL);
vsoAddParamWidget(widgetID: LONGINT; paramName: STRING; locName: STRING) : BOOLEAN;
vsoPrmName2WidgetID(recName: STRING; paramName: STRING; VAR outWidgetID: LONGINT) : BOOLEAN;
vstDrawCoordLineN(pt1X, pt1Y: REAL; pt2X, pt2Y: REAL; planeRefID: LONGINT);
vstDrawCoordLineN3D(pt1X, pt1Y: REAL; pt2X, pt2Y: REAL; planeRefID: LONGINT);
vsoWidgetSetIndLvl(widgetID: LONGINT; indentLevel: LONGINT);
DBShowManageDBsDlg();
DBShowDBTableDlg(database: STRING; table: STRING) : BOOLEAN;
DBShowObjConnDlg() : BOOLEAN;
DBDocHasConn() : BOOLEAN;
DBDocAddConn(dsn: DYNARRAY [] OF CHAR; userName: DYNARRAY [] OF CHAR; password: DYNARRAY [] OF CHAR) : BOOLEAN;
DBDocRemoveConn(databaseName: DYNARRAY [] OF CHAR) : BOOLEAN;
DBDocGetConn(databaseName: DYNARRAY [] OF CHAR; VAR outUserName: DYNARRAY [] OF CHAR; VAR outPassword: DYNARRAY [] OF CHAR) : BOOLEAN;
DBDocSetColKey(databaseName: DYNARRAY [] OF CHAR; tableName: DYNARRAY [] OF CHAR; columnName: DYNARRAY [] OF CHAR; setIsKey: BOOLEAN) : BOOLEAN;
DBDocGetDB(VAR outDatabases: DYNARRAY [] OF CHAR) : BOOLEAN;
DBDocGetTables(database: STRING; VAR outTables: DYNARRAY [] OF CHAR) : BOOLEAN;
DBDocGetColumns(database: STRING; table: STRING; VAR outNames: DYNARRAY [] OF CHAR; VAR outTypes: DYNARRAY [] OF CHAR; VAR outCanBeKey: DYNARRAY [] OF CHAR; VAR outIsKey: DYNARRAY [] OF CHAR) : BOOLEAN;
DBGetFormatConn(formatName: STRING; VAR outDatabase: STRING; VAR outTable: STRING) : BOOLEAN;
DBSetFormatConn(formatName: STRING; database: STRING; tableName: STRING) : BOOLEAN;
DBGetFormatFieldConn(formatName: STRING; VAR fieldName: STRING; VAR columnName: STRING; VAR linkType: INTEGER) : BOOLEAN;
DBSetFormatFieldConn(formatName: STRING; fieldName: STRING; columnName: STRING; linkType: INTEGER) : BOOLEAN;
DBObjSQLGetRead(hObject: HANDLE; VAR SQLSentence: DYNARRAY [] OF CHAR) : BOOLEAN;
DBObjSQLSetRead(hObject: HANDLE; SQLSentence: DYNARRAY [] OF CHAR) : BOOLEAN;
DBObjSQLGetWrite(hObject: HANDLE; VAR SQLSentence: DYNARRAY [] OF CHAR) : BOOLEAN;
DBObjSQLSetWrite(hObject: HANDLE; SQLSentence: DYNARRAY [] OF CHAR) : BOOLEAN;
DBSQLExecute(database: STRING; SQLQuery: DYNARRAY [] OF CHAR; VAR outColumnCnt: LONGINT; VAR outResultSetInst: LONGINT) : BOOLEAN;
DBSQLExecuteDSN(dsn: DYNARRAY [] OF CHAR; userName: DYNARRAY [] OF CHAR; password: DYNARRAY [] OF CHAR; SQLQuery: DYNARRAY [] OF CHAR; VAR outColumnCnt: LONGINT; VAR outResultSetInst: LONGINT) : BOOLEAN;
DBSQLExecuteDelete(VAR resultSetInst: LONGINT);
DBSQLExecuteGet(resultSetInst: LONGINT; colIndex: LONGINT; VAR outColumnName: DYNARRAY [] OF CHAR; VAR outValue: DYNARRAY [] OF CHAR) : BOOLEAN;
DBSQLExecuteNext(resultSetInst: LONGINT) : BOOLEAN;
DBSQLExecuteError(VAR message: DYNARRAY [] OF CHAR; VAR state: DYNARRAY [] OF CHAR; VAR code: LONGINT; VAR internalDesc: DYNARRAY [] OF CHAR) : BOOLEAN;
}
